- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
    nodejs_bin: /usr/bin/node
    iotapm_bin: /bin/iota-pm
    nginx_group: nginx
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
    nodejs_bin: /usr/bin/nodejs
    iotapm_bin: /usr/bin/iota-pm
    nginx_group: www-data
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add user to run iota-pm as
  user:
    name: "{{ iotapm_username }}"
    shell: /sbin/nologin
    createhome: no
    home: /var/spool/iotapm
  tags:
    - iotapm_user

- name: create iotapm spool directory
  file:
    path: /var/spool/iotapm
    state: directory
    owner: "{{ iotapm_username }}"
    group: "{{ iotapm_username }}"

- name: copy systemd service file
  template:
    src: templates/iota-pm.service.j2
    dest: "{{ systemd_dir }}/iota-pm.service"
  notify:
    - reload systemd

- name: flush handlers
  meta: flush_handlers

- name: copy iota-pm environment file
  template:
    src: templates/iota-pm.sysconfig.j2
    dest: "{{ config_dir }}/iota-pm"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart iota-pm

- name: copy validation script
  copy:
    src: ../shared-files/validate_nginx_config.sh
    dest: /usr/local/bin/validate_nginx_config.sh
    mode: 0755
  when: install_nginx is defined and install_nginx

- name: copy iotapm nginx config
  template:
    src: templates/iotapm.conf.j2
    dest: /etc/nginx/conf.d/iotapm.conf
    validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d conf.d/iotapm.conf -r"
  when: install_nginx is defined and install_nginx
  notify:
    - reload nginx

- name: configure iotapm nginx password
  htpasswd:
    path: /etc/nginx/.htpasswd
    name: '{{ iotapm_nginx_user }}' 
    password: '{{ iotapm_nginx_password }}'
    owner: root
    group: "{{ nginx_group }}"
    mode: 0640
  when: install_nginx is defined and install_nginx

- name: Wait max 90 seconds for IRI API port to become available
  wait_for:
    timeout: 90
    port: "{{ iri_api_port }}"

- name: ensure iota-pm started and enabled
  systemd:
    name: iota-pm.service
    state: started
    enabled: true

- name: ensure nginx started and enabled
  systemd:
    name: nginx
    state: started
    enabled: true
  when: install_nginx is defined and install_nginx
