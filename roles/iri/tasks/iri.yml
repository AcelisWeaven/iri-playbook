- name: set iri variables
  set_fact:
    iri_workdir: "{{ iri_basedir }}/target"

- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: set memory limit for java-iri
  set_fact:
    iri_java_mem: "{{ (ansible_memtotal_mb * 0.8)|int|abs }}m"
    iri_init_java_mem: "{{ (ansible_memtotal_mb * 0.2)|int|abs }}m"
    iri_java_heap_mem: "{{ (ansible_memtotal_mb * 0.2)|int|abs }}m"
  when: memory_autoset is defined and memory_autoset
  tags:
    - mem_override

- name: add user to run iri as
  user:
    name: "{{ iri_username }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ iri_basedir }}"
  tags:
    - iri_user

- name: remove workdir
  file:
    path: "{{ iri_workdir }}"
    state: absent
  when: remove_iri_workdir is defined and remove_iri_workdir

- name: ensure iri basedir ownership and permissions
  file:
    path: "{{ iri_basedir }}"
    state: directory
    mode: 0700
    owner: "{{ iri_username }}"
    group: "{{ iri_username }}"

- name: ensure iri workdir ownership and permissions
  file:
    path: "{{ iri_workdir }}"
    state: directory
    mode: 0700
    owner: "{{ iri_username }}"
    group: "{{ iri_username }}"
                               
- name: download iri jar
  get_url:
    url: "https://github.com/iotaledger/iri/releases/download/v{{ iri_version }}/iri-{{ iri_version }}.jar"
    dest: "{{ iri_workdir }}/iri-{{ iri_version }}.jar"
    checksum: "{{ iri_jar_checksum }}"
    owner: root
    group: "{{ iri_username }}"
    mode: 0640
  register: iri_downloaded
  notify:
    - restart iri

- name: copy utility scripts
  copy:
    src: "files/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - nbctl
    - reattach
  tags:
    - scripts

- name: download ps_mem
  get_url:
    url: https://raw.githubusercontent.com/pixelb/ps_mem/master/ps_mem.py
    dest: /usr/bin/ps_mem
    mode: 0755
  ignore_errors: yes
  tags:
    - scripts

- name: copy iri systemd file
  template:
    src: templates/iri.service.j2
    dest: "{{ systemd_dir }}/iri.service"
  notify:
    - reload systemd

- name: copy iri config file
  copy:
    src: files/iri.ini
    dest: "{{ iri_basedir }}/iri.ini"
    force: "{{ overwrite | default('no') }}"
    backup: yes

- name: flush handlers
  meta: flush_handlers

- name: copy iri environment file
  template:
    src: templates/iri.sysconfig.j2
    dest: "{{ config_dir }}/iri"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart iri

- name: ensure iri started and enabled
  systemd:
    name: iri.service
    state: started
    enabled: true
