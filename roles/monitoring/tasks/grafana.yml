- name: copy grafana new config file
  template:
    src: templates/grafana.ini.j2
    dest: /etc/grafana/grafana.ini
  notify:
    - restart grafana

- name: start and enable grafana service
  systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: copy validation script
  copy:
    src: ../shared-files/validate_nginx_config.sh
    dest: /usr/local/bin/validate_nginx_config.sh
    mode: 0755
  when: install_nginx is defined and install_nginx

- name: copy grafana nginx config
  template:
    src: templates/grafana.conf.j2
    dest: /etc/nginx/conf.d/grafana.conf
    validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d conf.d/grafana.conf -r"
  when: install_nginx is defined and install_nginx
  notify:
    - reload nginx

- name: flush handlers
  meta: flush_handlers

- name: Wait max 30 seconds for grafana nginx port to become available
  wait_for:
    timeout: 30
    port: "{{ grafana_port }}"

- name: create prometheus datasource in grafana
  uri:
    url: "http://localhost:{{ grafana_port }}/api/datasources"
    method: POST
    user: "{{ iotapm_nginx_user }}"
    password: "{{ iotapm_nginx_password }}"
    body: '{"name":"Prometheus","type":"prometheus","url":"http://localhost:{{ prom_port }}","access":"proxy","isDefault":true}'
    force_basic_auth: yes
    status_code: 200,409
    body_format: json
  register: datasource
  changed_when: datasource.status == 200
  tags:
    - grafana_api

- name: create node exporter dashboard in grafana
  uri:
    url: "http://localhost:{{ grafana_port }}/api/dashboards/db"
    method: POST
    user: "{{ iotapm_nginx_user }}"
    password: "{{ iotapm_nginx_password }}"
    body: "{{ lookup('file','files/node_exporter_dashboard.json') }}"
    force_basic_auth: yes
    status_code: 200,412
    body_format: json
  register: dashboard
  changed_when: dashboard.status == 200
  tags:
    - grafana_api

- name: create iota exporter dashboard in grafana
  uri:
    url: "http://localhost:{{ grafana_port }}/api/dashboards/db"
    method: POST
    user: "{{ iotapm_nginx_user }}"
    password: "{{ iotapm_nginx_password }}"
    body: "{{ lookup('file','files/iota_exporter_dashboard.json') }}"
    force_basic_auth: yes
    status_code: 200,412
    body_format: json
  register: dashboard
  changed_when: dashboard.status == 200
  tags:
    - grafana_api
